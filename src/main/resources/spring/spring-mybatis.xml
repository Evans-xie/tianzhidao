<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 配置整合mybatis过程 -->
    <!--1：配置数据库相关参数-->
    <context:property-placeholder location="classpath:database.properties"/>
    <!--2：数据库连接池-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--配置连接池属性-->
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--c3p00连接池的私有属性-->
        <property name="maxPoolSize" value="${jdbc.initPoolSize}"/>
        <property name="minPoolSize" value="${jdbc.minPoolSize}"/>
        <!--关闭后不自动commit-->
        <property name="autoCommitOnClose" value="false"/>
        <!--获取连接超时时间-->
        <property name="checkoutTimeout" value="1000"/>
        <!--重试次数-->
        <property name="acquireRetryAttempts" value="2"/>
    </bean>

    <!--3：配置SqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置MyBatis全局配置文件：mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描entity包，使用别名-->
        <!--当有多个包时，可以用分号隔开value="cn.seckill.entity;cn.seckill.bean"-->
        <property name="typeAliasesPackage" value="runtheworld.entity"/>
        <!--扫描sql配置文件：mapper需要的xml文件-->
        <!--如果放在类路径下，将映射失败java.lang.IllegalArgumentException: Mapped Statements collection does not contain value for cn.seckill.dao.RepertoryDao.queryById-->
        <!--<property name="mapperLocations" value="classpath*:cn/seckill/mapper/**/*.xml"/>-->
        <!--<property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>-->
    </bean>

    <!--4:配置扫描Dao接口包，动态实现Dao接口，注入到Spring 容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--给出需要扫描Dao接口包-->
        <!-- 自动扫描了所有的XxxxMapper.xml对应的mapper接口文件，这样就不用一个一个手动配置Mpper的映射了，只要Mapper接口类和Mapper映射文件对应起来就可以了。 -->
        <property name="basePackage" value="runtheworld.dao"/>
    </bean>


	<!--配置事务管理器-->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!--注入数据库连接池-->
		<!--引用另一个配置文件中的bean-->
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!--配置基于注解的申明式事务
        默认使用注解来管理事务行为
    -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
</beans>